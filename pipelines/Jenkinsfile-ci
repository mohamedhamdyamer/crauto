pipeline {
  agent {
    dockerfile {
      label 'crauto-cicd'
      dir 'cicd/images/jenkins-agent'
      args '--volume /home/amer/artifactory:/tmp/artifactory'
    }
  }

  stages {
    stage('displaying info ...') {
      steps {
        script {
          def galaxyFile = readYaml(file: 'app/ansible/collection/galaxy.yml')
          def version = ""
          galaxyFile.each {
            key, value ->
              if (key == "version") {
                version = value
              }
          }
          println("Version: " + version)
          println("Build: ${BUILD_NUMBER}")
          println("Full version: " + version + ".Build.${BUILD_NUMBER}")
        }
      }
    }

    stage('linting ...') {
      steps {
        sh '''
          #!/bin/bash
          /root/.local/bin/checkov --file cicd/images/jenkins-controller/Dockerfile --framework dockerfile
          /root/.local/bin/checkov --file cicd/images/jenkins-agent/Dockerfile --framework dockerfile

          /root/.local/bin/checkov --file app/images/jenkins-controller/Dockerfile --framework dockerfile
          /root/.local/bin/checkov --file app/images/jenkins-agent/Dockerfile --framework dockerfile

          yamllint app/images/jenkins-agent/docker-compose.yml
          yamllint app/images/jenkins-controller/docker-compose.yml
          yamllint cicd/images/jenkins-controller/docker-compose.yml

          ansible-lint app/ansible/collection/galaxy.yml
          ansible-lint app/ansible/inventory/hosts.yml
          ansible-lint app/ansible/collection/test.yml
        '''
      }
    }

    stage('testing ...') {
      steps {
        sh '''
          #!/bin/bash
          ansible-playbook --inventory app/ansible/inventory/hosts.yml app/ansible/collection/test.yml
        '''
      }
    }

    stage('building the Ansible collection ...') {
      steps {
        dir('app/ansible/collection') {
          sh '''
            #!/bin/bash
            rm -f *.tar.gz
            ansible-galaxy collection build
            mv *.tar.gz /tmp/artifactory/crauto/ansible/collections
          '''
        }
      }
    }

    stage('building the Docker images ...') {
      agent {
        node {
          docker.build("mohamedhamdyamer/crauto-app-jenkins-agent:latest", "app/images/jenkins-agent")
        }
      }
      steps {
      }
    }
  }
}
